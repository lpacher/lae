#############################################################################
##
## Improved Makefile example to automate FPGA implementation and programming
## flows using Xilinx Vivado Tcl scripts.
##
## The updated flow includes:
##
##   - a basic tool-check to search for a valid Xilinx Vivado installation
##     on the system before running Makefile targets
##
##   - a new setup.tcl common to both FPGA implementation and programming
##     flows can be used to define global Tcl variables related to the
##     project setup
##
##   - a new 'make gui' target to easily start a Vivado GUI session
##     and keep the shell alive on both Linux and Windows systems.
##
##
## Command line usage:
##
##   % cp .solutions/Makefile .
##   % make clean
##   % make build 
##   % make install
##
##
## Luca Pacher - pacher@to.infn.it
## Spring 2024
##
#############################################################################


## installation check
ifeq ($(shell which vivado 2> /dev/null),)
   @$(error ERROR: No 'vivado' executable found in search path! Force an exit now...)
endif 


## some useful aliases
RM := rm -f -v
RMDIR := rm -rf -v


## start Vivado in GUI mode and keep the shell alive
.PHONY: gui
gui:
	@echo "exec vivado -mode gui &" | tclsh -norc

## run RTL to bitstream generation flows using a Project Mode Tcl script
.PHONY: build
build: build.tcl setup.tcl

	@vivado -mode batch -source build.tcl -notrace -log build.log -nojournal


## install bitstream to Arty board (Hardware Manager)
.PHONY: install
install: install.tcl setup.tcl

	@vivado -mode batch -source install.tcl -notrace -log install.log -nojournal


## delete all log files and project files generated by Vivado flows
.PHONY: clean
clean:

	@$(RM) *.log *.jou *.str *.xpr *.xml *.bit *.bin
	@$(RMDIR) *.cache *.hbs *.hw *.ip_user_files *.runs *.sim *.srcs .Xil

